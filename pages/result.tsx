import type { NextPage } from 'next';
import Head from 'next/head';
import Image from 'next/image';
import styles from '../styles/Result.module.css';
import { useRouter } from 'next/router';
import { useEffect, useState } from 'react';
import { Loading } from '../src/components/common';
import styled from 'styled-components';
import AssignmentTurnedInIcon from '@mui/icons-material/AssignmentTurnedIn';
import BookIcon from '@mui/icons-material/Book';
import { getApi } from '../lib/api';

const API_DOMAIN = 'https://catch-back.herokuapp.com/';

interface ImagePorps {
  readonly src: string;
}

const Result: NextPage = () => {
  const router = useRouter();
  const [isLoading, setIsLoading] = useState(true);
  const [analysisResult, setAnaalysisResult] = useState({
    type: [{ value: '', label: '' }],
    path: '',
  });

  useEffect(() => {
    if (router.query.imageID) {
      const imageId = Number(router.query.imageID);
      getReusltData(imageId);
    }
  }, [router.query]);

  const getReusltData = async (imageId: number) => {
    setIsLoading(true);
    const response = await getApi.getClassificationResult(imageId);
    console.log(response);
    const result = response?.result[0];
    console.log(result);
    setAnaalysisResult(result);
    setIsLoading(false);
  };

  return (
    <div className={styles.container}>
      {isLoading ? (
        <Loading />
      ) : (
        <>
          <Head>
            <title>Catch App</title>
            <meta name="description" content="Generated by create next app" />
            <link rel="icon" href="/favicon.ico" />
          </Head>
          <h3 className={styles.name}>{analysisResult?.type?.[0]?.label}</h3>
          <Picture src={`${API_DOMAIN}${analysisResult.path}`} />
          <div className={styles.detail_content_field}>
            <h3 className={styles.field_title_text}>
              <AssignmentTurnedInIcon className={styles.field_icon} />
              분석결과
            </h3>
            <div className={styles.field_section}>
              <h4 className={styles.field_section_title_level1}>확률</h4>
              {analysisResult?.type?.length > 0 &&
                analysisResult.type?.map((item) => (
                  <div className={styles.field_section_text}>
                    {item?.label}/{item?.value}
                  </div>
                ))}
            </div>
            <div className={styles.field_section}>
              <h4 className={styles.field_section_title_level1}>
                분리수거 방법
              </h4>
              <div className={styles.field_section_text}>
                -내용물을 비우고, 물로 깨끗히 세척해서 배출해요. -상표, 뚜껑
                등이 다른 재질이라면 분리해서 재질별로 나눠서 배출해요.{' '}
              </div>
            </div>
          </div>
          <div className={styles.detail_content_field}>
            <h3 className={styles.field_title_text}>
              <BookIcon className={styles.field_icon} />
              유의사항
            </h3>{' '}
            <div className={styles.field_string_gird}>
              <AssignmentTurnedInIcon
                className={styles.field_string_grid_icon}
              />
              <div className={styles.field_string_gird_content}>
                <h4 className={styles.field_string_gird_content_title}>
                  신문지
                </h4>
                <div className={styles.field_string_gird_content_text}>
                  -물기에 젖지 않게 함 반 듯하게 펴서 차곡차곡 쌓아서 묶음{' '}
                  {'\n'}
                  -비닐코팅 광고지, 비닐류, 기타 오물이 섞이지 않아야 함
                </div>
              </div>
            </div>
            <div className={styles.field_string_gird}>
              <AssignmentTurnedInIcon
                className={styles.field_string_grid_icon}
              />
              <div className={styles.field_string_gird_content}>
                <h4 className={styles.field_string_gird_content_title}>
                  종이컵, 종이팩
                </h4>
                <div className={styles.field_string_gird_content_text}>
                  내용물을 비우고 물로 한번 헹군 후 압착하여 봉투에 넣거나,
                  한군데로 묶음
                </div>
              </div>
            </div>
          </div>
        </>
      )}
    </div>
  );
};

export default Result;

const Picture = styled.div<ImagePorps>`
  position: relative;
  margin-top: 2rem;
  @media screen and (min-width: 480px) {
    width: 240px;
    height: 240px;
  }
  @media screen and (max-width: 480px) {
    width: 50vw;
    height: 50vw;
  }
  border-radius: 0.8rem;
  background: url(${(props: any) => props?.src}) center center / contain
    no-repeat;
`;
